/*
 * This file is generated by jOOQ.
 */
package com.mick.vuetinaut.jooq.model;


import com.mick.vuetinaut.jooq.model.tables.Note;
import com.mick.vuetinaut.jooq.model.tables.Notepad;
import com.mick.vuetinaut.jooq.model.tables.NotepadUserShare;
import com.mick.vuetinaut.jooq.model.tables.User;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = -189159062;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.note</code>.
     */
    public final Note NOTE = com.mick.vuetinaut.jooq.model.tables.Note.NOTE;

    /**
     * The table <code>public.notepad</code>.
     */
    public final Notepad NOTEPAD = com.mick.vuetinaut.jooq.model.tables.Notepad.NOTEPAD;

    /**
     * The table <code>public.notepad_user_share</code>.
     */
    public final NotepadUserShare NOTEPAD_USER_SHARE = com.mick.vuetinaut.jooq.model.tables.NotepadUserShare.NOTEPAD_USER_SHARE;

    /**
     * The table <code>public.user</code>.
     */
    public final User USER = com.mick.vuetinaut.jooq.model.tables.User.USER;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Note.NOTE,
            Notepad.NOTEPAD,
            NotepadUserShare.NOTEPAD_USER_SHARE,
            User.USER);
    }
}
